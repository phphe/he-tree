import{_ as g,g as s,u,f as i,h as v,r as c,c as h,a,b as e,w as n,e as d,o as p}from"./index-86792da5.js";import{_ as f,C as m}from"./CodeContainer-bc270f09.js";const _={extends:f,components:{CodeContainer:m},setup(){const r=s(),t={name:"API",id:"api",level:1,children:[{name:"BaseTree",id:"basetree",level:2,children:[{name:"props",id:"props",level:3,children:[{name:"idKey",id:"idkey",level:4,children:[]},{name:"parentIdKey",id:"parentidkey",level:4,children:[]},{name:"childrenKey",id:"childrenkey",level:4,children:[]},{name:"textKey",id:"textkey",level:4,children:[]},{name:"flatData",id:"flatdata",level:4,children:[]},{name:"treeData",id:"treedata",level:4,children:[]},{name:"indent",id:"indent",level:4,children:[]},{name:"gap",id:"gap",level:4,children:[]},{name:"rtl",id:"rtl",level:4,children:[]},{name:"virtualization",id:"virtualization",level:4,children:[]},{name:"virtualizationPrerender",id:"virtualizationprerender",level:4,children:[]},{name:"childrenLazyLoading",id:"childrenlazyloading",level:4,children:[]},{name:"childrenLoader",id:"childrenloader",level:4,children:[]},{name:"defaultFolded",id:"defaultfolded",level:4,children:[]}]},{name:"data",id:"data",level:3,children:[{name:"nodes",id:"nodes",level:4,children:[]},{name:"nodesByID",id:"nodesbyid",level:4,children:[]},{name:"trees",id:"trees",level:4,children:[]},{name:"dragging",id:"dragging",level:4,children:[]},{name:"treeID",id:"treeid",level:4,children:[]},{name:"tree",id:"tree",level:4,children:[]}]},{name:"computed",id:"computed",level:3,children:[{name:"visibleNodes",id:"visiblenodes",level:4,children:[]}]},{name:"events",id:"events",level:3,children:[{name:"fold",id:"fold",level:4,children:[]},{name:"unfold",id:"unfold",level:4,children:[]},{name:"load-children",id:"load-children",level:4,children:[]},{name:"load-children-success",id:"load-children-success",level:4,children:[]},{name:"load-children-error",id:"load-children-error",level:4,children:[]}]},{name:"methods",id:"methods",level:3,children:[{name:"countChildren",id:"countchildren",level:4,children:[]},{name:"addNode",id:"addnode",level:4,children:[]},{name:"moveNode",id:"movenode",level:4,children:[]},{name:"removeNode",id:"removenode",level:4,children:[]},{name:"outputNestedData",id:"outputnesteddata",level:4,children:[]},{name:"outputFlatData",id:"outputflatdata",level:4,children:[]},{name:"isNodeParentFolded",id:"isnodeparentfolded",level:4,children:[]},{name:"isNodeVisible",id:"isnodevisible",level:4,children:[]},{name:"foldAll",id:"foldall",level:4,children:[]},{name:"unfoldAll",id:"unfoldall",level:4,children:[]},{name:"unfold",id:"unfold-1",level:4,children:[]},{name:"toggleFold",id:"togglefold",level:4,children:[]},{name:"updateChecked",id:"updatechecked",level:4,children:[]},{name:"getAllCheckedNodes",id:"getallcheckednodes",level:4,children:[]}]}]},{name:"Draggable",id:"draggable",level:2,children:[{name:"props",id:"props-1",level:3,children:[{name:"triggerClass",id:"triggerclass",level:4,children:[]},{name:"triggerBySelf",id:"triggerbyself",level:4,children:[]},{name:"draggable",id:"draggable-1",level:4,children:[]},{name:"droppable",id:"droppable",level:4,children:[]},{name:"eachDraggable",id:"eachdraggable",level:4,children:[]},{name:"eachDroppable",id:"eachdroppable",level:4,children:[]},{name:"rootDraggable",id:"rootdraggable",level:4,children:[]},{name:"rootDroppable",id:"rootdroppable",level:4,children:[]},{name:"ondragstart",id:"ondragstart",level:4,children:[]},{name:"ondragend",id:"ondragend",level:4,children:[]},{name:"afterPlaceholderCreated",id:"afterplaceholdercreated",level:4,children:[]},{name:"placeholderMaxHeight",id:"placeholdermaxheight",level:4,children:[]},{name:"unfoldWhenDragover",id:"unfoldwhendragover",level:4,children:[]},{name:"unfoldWhenDragoverDelay",id:"unfoldwhendragoverdelay",level:4,children:[]},{name:"isNodeUnfoldable",id:"isnodeunfoldable",level:4,children:[]},{name:"draggingNodePositionMode",id:"draggingnodepositionmode",level:4,children:[]},{name:"preventTextSelection",id:"preventtextselection",level:4,children:[]},{name:"edgeScroll",id:"edgescroll",level:4,children:[]},{name:"edgeScrollTriggerMargin",id:"edgescrolltriggermargin",level:4,children:[]},{name:"edgeScrollSpeed",id:"edgescrollspeed",level:4,children:[]},{name:"edgeScrollTriggerMode",id:"edgescrolltriggermode",level:4,children:[]},{name:"edgeScrollSpecifiedContainerX",id:"edgescrollspecifiedcontainerx",level:4,children:[]},{name:"edgeScrollSpecifiedContainerY",id:"edgescrollspecifiedcontainery",level:4,children:[]}]},{name:"data",id:"data-1",level:3,children:[{name:"draggingNode",id:"draggingnode",level:4,children:[]},{name:"store",id:"store",level:4,children:[]}]},{name:"events",id:"events-1",level:3,children:[{name:"drag",id:"drag",level:4,children:[]},{name:"before-first-move",id:"before-first-move",level:4,children:[]},{name:"drop",id:"drop",level:4,children:[]},{name:"drop-into",id:"drop-into",level:4,children:[]},{name:"drop-change",id:"drop-change",level:4,children:[]}]},{name:"methods",id:"methods-1",level:3,children:[{name:"isParentDragging",id:"isparentdragging",level:4,children:[]}]}]},{name:"Other",id:"other",level:2,children:[{name:"Draggable",id:"draggable-2",level:3,children:[]},{name:"eachDraggableFunc",id:"eachdraggablefunc",level:3,children:[]},{name:"PositionMode",id:"positionmode",level:3,children:[]},{name:"Store3",id:"store3",level:3,children:[]},{name:"EventPosition",id:"eventposition",level:3,children:[]},{name:"EventPosition2",id:"eventposition2",level:3,children:[]},{name:"obj",id:"obj",level:3,children:[]},{name:"BaseNode",id:"basenode",level:3,children:[]},{name:"Node",id:"node",level:3,children:[]}]}]};u(t.name,r),i.value=t.children||[],v(()=>{i.value=null})}},b={class:"docs-view"},L={class:"article mt-14 mb-8 prose"},y=a("p",null,"vm of tree",-1),N=a("p",null,"For children lazy load. Start to load children",-1),S=a("p",null,"For children lazy load",-1),E=a("p",null,[d("For children lazy load. Get error by "),a("code",null,"node.$childrenLoadStaus.error"),d(".")],-1),D=a("p",null,"The draggable tree component. It extends BaseTree.",-1),P=a("p",null,[d("Function type is "),a("a",{href:"#eachDraggableFunc"},"eachDraggableFunc")],-1),T=a("p",null,[d("Function type is "),a("a",{href:"#eachDraggableFunc"},"eachDraggableFunc")],-1),C=a("p",null,[a("strong",null,[a("code",null,"ondragend"),d(" supports promise, but "),a("code",null,"ondragstart"),d(" does not.")])],-1),M=a("p",null,[a("strong",null,[a("code",null,"ondragend"),d(" supports promise, but "),a("code",null,"ondragstart"),d(" does not.")])],-1),B=a("p",null,[a("strong",null,[d("The data is not updated in "),a("code",null,"ondragend"),d(".")])],-1),x=a("p",null,"Runtime data of drag and drop.",-1),F=a("p",null,"Emit when drag start.",-1),k=a("p",null,[d("Same with "),a("code",null,"drag")],-1),$=a("p",null,"Emit when drag end. Emit to drag start/source tree.",-1),w=a("p",null,"Emit when drag end. Emit to drag end/target tree.",-1),z=a("p",null,"Emit when the tree changed by drag. Emit to both drag start and end tree.",-1),H=a("p",null,"The Vue instance(vm) of the Draggable component.",-1),I=a("p",null,"Runtime data of drag and drop.",-1);function A(r,t,K,j,O,R){const l=c("vheading"),o=c("CodeContainer");return p(),h("div",b,[a("div",L,[e(l,{level:1,id:"api"},{default:n(()=>[d("API")]),_:1}),e(l,{level:2,id:"basetree"},{default:n(()=>[d("BaseTree")]),_:1}),e(l,{level:3,id:"props"},{default:n(()=>[d("props")]),_:1}),e(l,{level:4,id:"idkey"},{default:n(()=>[d("idKey")]),_:1}),e(o,{codeLanguage:"ts",code:'{ type: String, default: "id" }\n'}),e(l,{level:4,id:"parentidkey"},{default:n(()=>[d("parentIdKey")]),_:1}),e(o,{codeLanguage:"ts",code:'{ type: String, default: "parent_id" }\n'}),e(l,{level:4,id:"childrenkey"},{default:n(()=>[d("childrenKey")]),_:1}),e(o,{codeLanguage:"ts",code:'{ type: String, default: "children" }\n'}),e(l,{level:4,id:"textkey"},{default:n(()=>[d("textKey")]),_:1}),e(o,{codeLanguage:"ts",code:'{ type: String, default: "text" }\n'}),e(l,{level:4,id:"flatdata"},{default:n(()=>[d("flatData")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  type: Array\n}\n"}),e(l,{level:4,id:"treedata"},{default:n(()=>[d("treeData")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  type: Array\n}\n"}),e(l,{level:4,id:"indent"},{default:n(()=>[d("indent")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Number, default: 20 }\n"}),e(l,{level:4,id:"gap"},{default:n(()=>[d("gap")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  type: Number\n}\n"}),e(l,{level:4,id:"rtl"},{default:n(()=>[d("rtl")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: false }\n"}),e(l,{level:4,id:"virtualization"},{default:n(()=>[d("virtualization")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: false }\n"}),e(l,{level:4,id:"virtualizationprerender"},{default:n(()=>[d("virtualizationPrerender")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Number, default: 20 }\n"}),e(l,{level:4,id:"childrenlazyloading"},{default:n(()=>[d("childrenLazyLoading")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: false }\n"}),e(l,{level:4,id:"childrenloader"},{default:n(()=>[d("childrenLoader")]),_:1}),e(o,{codeLanguage:"ts",code:"(\n  node: Node,\n  vm: ComponentPublicInstance\n) => Promise<Node[]>;\n"}),e(l,{level:4,id:"defaultfolded"},{default:n(()=>[d("defaultFolded")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: false }\n"}),e(l,{level:3,id:"data"},{default:n(()=>[d("data")]),_:1}),e(l,{level:4,id:"nodes"},{default:n(()=>[d("nodes")]),_:1}),e(o,{codeLanguage:"ts",code:"Node[]\n"}),e(l,{level:4,id:"nodesbyid"},{default:n(()=>[d("nodesByID")]),_:1}),e(o,{codeLanguage:"ts",code:"Record<string, Node>\n"}),e(l,{level:4,id:"trees"},{default:n(()=>[d("trees")]),_:1}),e(o,{codeLanguage:"ts",code:"{[treeID:string]: Node}\n"}),e(l,{level:4,id:"dragging"},{default:n(()=>[d("dragging")]),_:1}),e(o,{codeLanguage:"ts",code:"boolean\n"}),e(l,{level:4,id:"treeid"},{default:n(()=>[d("treeID")]),_:1}),e(o,{codeLanguage:"ts",code:"string\n"}),e(l,{level:4,id:"tree"},{default:n(()=>[d("tree")]),_:1}),y,e(o,{codeLanguage:"ts",code:"this\n"}),e(l,{level:3,id:"computed"},{default:n(()=>[d("computed")]),_:1}),e(l,{level:4,id:"visiblenodes"},{default:n(()=>[d("visibleNodes")]),_:1}),e(o,{codeLanguage:"ts",code:"Node[]\n"}),e(l,{level:3,id:"events"},{default:n(()=>[d("events")]),_:1}),e(l,{level:4,id:"fold"},{default:n(()=>[d("fold")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node)\n"}),e(l,{level:4,id:"unfold"},{default:n(()=>[d("unfold")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node)\n"}),e(l,{level:4,id:"load-children"},{default:n(()=>[d("load-children")]),_:1}),N,e(o,{codeLanguage:"ts",code:"(node: Node)\n"}),e(l,{level:4,id:"load-children-success"},{default:n(()=>[d("load-children-success")]),_:1}),S,e(o,{codeLanguage:"ts",code:"(node: Node)\n"}),e(l,{level:4,id:"load-children-error"},{default:n(()=>[d("load-children-error")]),_:1}),E,e(o,{codeLanguage:"ts",code:"(node: Node)\n"}),e(l,{level:3,id:"methods"},{default:n(()=>[d("methods")]),_:1}),e(l,{level:4,id:"countchildren"},{default:n(()=>[d("countChildren")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node | undefined): number\n"}),e(l,{level:4,id:"addnode"},{default:n(()=>[d("addNode")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: obj, parentId: number | string | null, index?: number): void;\n"}),e(l,{level:4,id:"movenode"},{default:n(()=>[d("moveNode")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node, parentId: number | string | null, index?: number): void;\n"}),e(l,{level:4,id:"removenode"},{default:n(()=>[d("removeNode")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node): void;\n"}),e(l,{level:4,id:"outputnesteddata"},{default:n(()=>[d("outputNestedData")]),_:1}),e(o,{codeLanguage:"ts",code:"(parent: Node | null, ignoreKeys?: string[], _returnFlat?: boolean | undefined): obj[];\n"}),e(l,{level:4,id:"outputflatdata"},{default:n(()=>[d("outputFlatData")]),_:1}),e(o,{codeLanguage:"ts",code:"(parent: Node | null, ignoreKeys?: string[]): Record<string, unknown>[];\n"}),e(l,{level:4,id:"isnodeparentfolded"},{default:n(()=>[d("isNodeParentFolded")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node): boolean;\n"}),e(l,{level:4,id:"isnodevisible"},{default:n(()=>[d("isNodeVisible")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node): boolean;\n"}),e(l,{level:4,id:"foldall"},{default:n(()=>[d("foldAll")]),_:1}),e(o,{codeLanguage:"ts",code:"(): void;\n"}),e(l,{level:4,id:"unfoldall"},{default:n(()=>[d("unfoldAll")]),_:1}),e(o,{codeLanguage:"ts",code:"(node?: Node | undefined): Promise<void> | undefined;\n"}),e(l,{level:4,id:"unfold-1"},{default:n(()=>[d("unfold")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node): void | Promise<void>;\n"}),e(l,{level:4,id:"togglefold"},{default:n(()=>[d("toggleFold")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node): void | Promise<void>;\n"}),e(l,{level:4,id:"updatechecked"},{default:n(()=>[d("updateChecked")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node): void;\n"}),e(l,{level:4,id:"getallcheckednodes"},{default:n(()=>[d("getAllCheckedNodes")]),_:1}),e(o,{codeLanguage:"ts",code:"(): Node[];\n"}),e(l,{level:2,id:"draggable"},{default:n(()=>[d("Draggable")]),_:1}),D,e(l,{level:3,id:"props-1"},{default:n(()=>[d("props")]),_:1}),e(l,{level:4,id:"triggerclass"},{default:n(()=>[d("triggerClass")]),_:1}),e(o,{codeLanguage:"ts",code:'{ type: String, default: "tree-node" }\n'}),e(l,{level:4,id:"triggerbyself"},{default:n(()=>[d("triggerBySelf")]),_:1}),e(o,{codeLanguage:"ts",code:"Boolean\n"}),e(l,{level:4,id:"draggable-1"},{default:n(()=>[d("draggable")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),e(l,{level:4,id:"droppable"},{default:n(()=>[d("droppable")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),e(l,{level:4,id:"eachdraggable"},{default:n(()=>[d("eachDraggable")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  type: [Boolean, Function]\n}\n"}),P,e(l,{level:4,id:"eachdroppable"},{default:n(()=>[d("eachDroppable")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  type: [Boolean, Function]\n}\n"}),T,e(l,{level:4,id:"rootdraggable"},{default:n(()=>[d("rootDraggable")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),e(l,{level:4,id:"rootdroppable"},{default:n(()=>[d("rootDroppable")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),e(l,{level:4,id:"ondragstart"},{default:n(()=>[d("ondragstart")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n"}),C,e(l,{level:4,id:"ondragend"},{default:n(()=>[d("ondragend")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n"}),M,B,e(l,{level:4,id:"afterplaceholdercreated"},{default:n(()=>[d("afterPlaceholderCreated")]),_:1}),e(o,{codeLanguage:"ts",code:"(placeholder: HTMLElement, store: Store3) => void\n"}),e(l,{level:4,id:"placeholdermaxheight"},{default:n(()=>[d("placeholderMaxHeight")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Number, default: 100 }\n"}),e(l,{level:4,id:"unfoldwhendragover"},{default:n(()=>[d("unfoldWhenDragover")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),e(l,{level:4,id:"unfoldwhendragoverdelay"},{default:n(()=>[d("unfoldWhenDragoverDelay")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Number, default: 80 }\n"}),e(l,{level:4,id:"isnodeunfoldable"},{default:n(()=>[d("isNodeUnfoldable")]),_:1}),e(o,{codeLanguage:"ts",code:"{\ntype: Function as PropType<(store: Store3) => boolean>,\n}\n"}),e(l,{level:4,id:"draggingnodepositionmode"},{default:n(()=>[d("draggingNodePositionMode")]),_:1}),e(o,{codeLanguage:"ts",code:'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n'}),e(l,{level:4,id:"preventtextselection"},{default:n(()=>[d("preventTextSelection")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),e(l,{level:4,id:"edgescroll"},{default:n(()=>[d("edgeScroll")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  type: Boolean\n}\n"}),e(l,{level:4,id:"edgescrolltriggermargin"},{default:n(()=>[d("edgeScrollTriggerMargin")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Number, default: 50 }\n"}),e(l,{level:4,id:"edgescrollspeed"},{default:n(()=>[d("edgeScrollSpeed")]),_:1}),e(o,{codeLanguage:"ts",code:"{ type: Number, default: 0.35 }\n"}),e(l,{level:4,id:"edgescrolltriggermode"},{default:n(()=>[d("edgeScrollTriggerMode")]),_:1}),e(o,{codeLanguage:"ts",code:'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n'}),e(l,{level:4,id:"edgescrollspecifiedcontainerx"},{default:n(()=>[d("edgeScrollSpecifiedContainerX")]),_:1}),e(o,{codeLanguage:"ts",code:"HTMLElement | ((store: Store3) => HTMLElement)\n"}),e(l,{level:4,id:"edgescrollspecifiedcontainery"},{default:n(()=>[d("edgeScrollSpecifiedContainerY")]),_:1}),e(o,{codeLanguage:"ts",code:"HTMLElement | ((store: Store3) => HTMLElement)\n"}),e(l,{level:3,id:"data-1"},{default:n(()=>[d("data")]),_:1}),e(l,{level:4,id:"draggingnode"},{default:n(()=>[d("draggingNode")]),_:1}),e(o,{codeLanguage:"ts",code:"Node | null\n"}),e(l,{level:4,id:"store"},{default:n(()=>[d("store")]),_:1}),x,e(o,{codeLanguage:"ts",code:"Store3 | null\n"}),e(l,{level:3,id:"events-1"},{default:n(()=>[d("events")]),_:1}),e(l,{level:4,id:"drag"},{default:n(()=>[d("drag")]),_:1}),F,e(o,{codeLanguage:"ts",code:"(store: Store3)\n"}),e(l,{level:4,id:"before-first-move"},{default:n(()=>[d("before-first-move")]),_:1}),k,e(o,{codeLanguage:"ts",code:"(store: Store3)\n"}),e(l,{level:4,id:"drop"},{default:n(()=>[d("drop")]),_:1}),$,e(o,{codeLanguage:"ts",code:"(store: Store3)\n"}),e(l,{level:4,id:"drop-into"},{default:n(()=>[d("drop-into")]),_:1}),w,e(o,{codeLanguage:"ts",code:"(store: Store3)\n"}),e(l,{level:4,id:"drop-change"},{default:n(()=>[d("drop-change")]),_:1}),z,e(o,{codeLanguage:"ts",code:"(store: Store3)\n"}),e(l,{level:3,id:"methods-1"},{default:n(()=>[d("methods")]),_:1}),e(l,{level:4,id:"isparentdragging"},{default:n(()=>[d("isParentDragging")]),_:1}),e(o,{codeLanguage:"ts",code:"(node: Node): boolean;\n"}),e(l,{level:2,id:"other"},{default:n(()=>[d("Other")]),_:1}),e(l,{level:3,id:"draggable-2"},{default:n(()=>[d("Draggable")]),_:1}),H,e(l,{level:3,id:"eachdraggablefunc"},{default:n(()=>[d("eachDraggableFunc")]),_:1}),e(o,{codeLanguage:"ts",code:"type eachDraggableFunc = (\n  node: Node | undefined,\n  store: Store3,\n  options: Options2,\n  vm: Draggable\n) => boolean | undefined\n"}),e(l,{level:3,id:"positionmode"},{default:n(()=>[d("PositionMode")]),_:1}),e(o,{codeLanguage:"ts",code:"'top_left_corner' | 'mouse'\n"}),e(l,{level:3,id:"store3"},{default:n(()=>[d("Store3")]),_:1}),I,e(o,{codeLanguage:"ts",code:'interface {\n  // Store\n  movedCount: number;\n  listenerElement: HTMLElement;\n  directTriggerElement: HTMLElement;\n  triggerElement: HTMLElement;\n  startEvent: MouseOrTouchEvent;\n  moveEvent: MouseOrTouchEvent;\n  endEvent: MouseOrTouchEvent;\n  mouse: EventPosition;\n  initialMouse: EventPosition;\n  move: EventPosition2;\n  movedOrClonedElement: HTMLElement;\n  movedElement: HTMLElement;\n  initialPosition: EventPosition2;\n  initialPositionRelativeToViewport: EventPosition2;\n  updateMovedElementStyle: () => void;\n  _isMovingElementCloned: boolean;\n  // Store2\n  startTreeEl: HTMLElement;\n  targetTreeEl: HTMLElement;\n  placeholder: HTMLElement;\n  // Store3\n  startTree: Draggable;\n  targetTree: Draggable;\n  draggingNode: Node;\n  startPath: {\n      tree: Draggable;\n      parent?: Node;\n      index: number;\n  };\n  targetPath: Store3["startPath"]; // same to startPath\n  placeholderLevel: number;\n  placeholderPrevNode?: Node;\n  placeholderPrevNodeInTree?: Node;\n  dragChanged?: boolean;\n  isCloned?: boolean;\n}\n'}),e(l,{level:3,id:"eventposition"},{default:n(()=>[d("EventPosition")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  x: number, y: number,\n  pageX: number,\n  pageY: number,\n  clientX: number,\n  clientY: number,\n  screenX: number,\n  screenY: number\n}\n"}),e(l,{level:3,id:"eventposition2"},{default:n(()=>[d("EventPosition2")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  x: number\n  y: number\n}\n"}),e(l,{level:3,id:"obj"},{default:n(()=>[d("obj")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n  string: unknown\n}\n"}),e(l,{level:3,id:"basenode"},{default:n(()=>[d("BaseNode")]),_:1}),e(o,{codeLanguage:"ts",code:"{\n    $id: string | number;\n    $pid?: string | number;\n    $level: number;\n    $hidden?: boolean;\n    $folded?: boolean;\n    $checked?: boolean | 0;\n    $children: Node[];\n    $childrenLoading?: boolean;\n    $childrenLoadStaus?: {\n      status: 'success'|'error',\n      error: Error\n    };\n    $draggable?: boolean;\n    $droppable?: boolean;\n    $nodeStyle?: string | Record<string, string> | unknown;\n    $nodeClass?: string | unknown;\n    $outerStyle?: string | Record<string, string> | unknown;\n    $outerClass?: string | unknown;\n}\n"}),e(l,{level:3,id:"node"},{default:n(()=>[d("Node")]),_:1}),e(o,{codeLanguage:"ts",code:"obj & BaseNode\n"})])])}const Y=g(_,[["render",A]]);export{Y as default};
