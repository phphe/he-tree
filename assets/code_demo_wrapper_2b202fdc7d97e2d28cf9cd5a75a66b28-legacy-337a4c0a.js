System.register(["./CodeContainer-legacy-9e5acd0c.js","./index-legacy-be5d2fb8.js"],(function(e,t){"use strict";var n,r,a,o,d,c,l,u,x,i,s,h,p,m,g,D,f;return{setters:[e=>{n=e.C},e=>{r=e._,a=e.B,o=e.r,d=e.o,c=e.k,l=e.w,u=e.b,x=e.c,i=e.e,s=e.t,h=e.a,p=e.m,m=e.v,g=e.j,D=e.l,f=e.s}],execute:function(){e("i",r({components:{CodeContainer:n,Demo:r({components:{BaseTree:a},data:()=>({treeData:[{text:"Projects",children:[{text:"Frontend",children:[{text:"Vue",children:[{text:"Nuxt"}]},{text:"React",children:[{text:"Next"}]},{text:"Angular"}]},{text:"Backend"}]},{text:"Photos"},{text:"Videos"}]})},[["render",function(e,t,n,r,a,l){const u=o("BaseTree");return d(),c(u,{modelValue:a.treeData,"onUpdate:modelValue":t[0]||(t[0]=e=>a.treeData=e)},null,8,["modelValue"])}]])},data:()=>({code:"<template>\n  <BaseTree v-model=\"treeData\" />\n</template>\n\n<script>\n  import { BaseTree, Draggable, pro } from '@he-tree/vue'\n  import '@he-tree/vue/style/default.css'\n\n  export default {\n    components: { BaseTree },\n    data() {\n      return {\n        treeData: [\n          {\n            text: 'Projects',\n            children: [\n              {\n                text: 'Frontend',\n                children: [\n                  {\n                    text: 'Vue',\n                    children: [\n                      {\n                        text: 'Nuxt',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'React',\n                    children: [\n                      {\n                        text: 'Next',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'Angular',\n                  },\n                ],\n              },\n              {\n                text: 'Backend',\n              },\n            ],\n          },\n          { text: 'Photos' },\n          { text: 'Videos' },\n        ],\n      }\n    },\n  }\n<\/script>"})},[["render",function(e,t,n,r,a,x){const i=o("Demo"),s=o("CodeContainer");return d(),c(s,{code:a.code,demo:"",codeLanguage:"vue"},{default:l((()=>[u(i)])),_:1},8,["code"])}]]));const t=["onClick"],v=["onUpdate:modelValue"];e("a",r({components:{CodeContainer:n,Demo:r({components:{BaseTree:a},data:()=>({treeData:[{text:"Projects",children:[{text:"Frontend",children:[{text:"Vue",children:[{text:"Nuxt"}]},{text:"React",children:[{text:"Next"}]},{text:"Angular"}]},{text:"Backend"}]},{text:"Photos"},{text:"Videos"}],checked:[]}),methods:{onCheckNode(){this.checked=this.$refs.tree.getChecked().map((e=>e.data.text))}}},[["render",function(e,n,r,a,c,g){const D=o("BaseTree");return d(),x("div",null,[i(" Checked: "+s(c.checked)+" ",1),u(D,{modelValue:c.treeData,"onUpdate:modelValue":n[0]||(n[0]=e=>c.treeData=e),ref:"tree","onCheck:node":g.onCheckNode},{default:l((({node:e,stat:n})=>[h("button",{onClick:e=>n.open=!n.open},s(n.open?"-":"+"),9,t),p(h("input",{type:"checkbox","onUpdate:modelValue":e=>n.checked=e},null,8,v),[[m,n.checked]]),i(" "+s(e.text),1)])),_:1},8,["modelValue","onCheck:node"])])}]])},data:()=>({code:"<template>\n  <div>\n    Checked: {{ checked }}\n    <BaseTree v-model=\"treeData\" ref=\"tree\" @check:node=\"onCheckNode\">\n      <template #default=\"{ node, stat }\">\n        <button @click=\"stat.open = !stat.open\">\n          {{ stat.open ? '-' : '+' }}\n        </button>\n        <input type=\"checkbox\" v-model=\"stat.checked\" />\n        {{ node.text }}\n      </template>\n    </BaseTree>\n  </div>\n</template>\n\n<script>\n  import { BaseTree, Draggable, pro } from '@he-tree/vue'\n  import '@he-tree/vue/style/default.css'\n\n  export default {\n    components: { BaseTree },\n    data() {\n      return {\n        treeData: [\n          {\n            text: 'Projects',\n            children: [\n              {\n                text: 'Frontend',\n                children: [\n                  {\n                    text: 'Vue',\n                    children: [\n                      {\n                        text: 'Nuxt',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'React',\n                    children: [\n                      {\n                        text: 'Next',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'Angular',\n                  },\n                ],\n              },\n              {\n                text: 'Backend',\n              },\n            ],\n          },\n          { text: 'Photos' },\n          { text: 'Videos' },\n        ],\n        checked: [],\n      }\n    },\n    methods: {\n      onCheckNode() {\n        this.checked = this.$refs.tree.getChecked().map((v) => v.data.text)\n      },\n    },\n  }\n<\/script>"})},[["render",function(e,t,n,r,a,x){const i=o("Demo"),s=o("CodeContainer");return d(),c(s,{code:a.code,demo:"",codeLanguage:"vue"},{default:l((()=>[u(i)])),_:1},8,["code"])}]])),e("b",r({components:{CodeContainer:n,Demo:r({components:{Draggable:g},data:()=>({treeData:[{text:"Projects",children:[{text:"Frontend",children:[{text:"Vue",children:[{text:"Nuxt"}]},{text:"React",children:[{text:"Next"}]},{text:"Angular"}]},{text:"Backend"}]},{text:"Photos"},{text:"Videos"}]})},[["render",function(e,t,n,r,a,l){const u=o("Draggable");return d(),c(u,{modelValue:a.treeData,"onUpdate:modelValue":t[0]||(t[0]=e=>a.treeData=e)},null,8,["modelValue"])}]])},data:()=>({code:"<template>\n  <Draggable v-model=\"treeData\" />\n</template>\n\n<script>\n  import { BaseTree, Draggable, pro } from '@he-tree/vue'\n  import '@he-tree/vue/style/default.css'\n\n  export default {\n    components: { Draggable },\n    data() {\n      return {\n        treeData: [\n          {\n            text: 'Projects',\n            children: [\n              {\n                text: 'Frontend',\n                children: [\n                  {\n                    text: 'Vue',\n                    children: [\n                      {\n                        text: 'Nuxt',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'React',\n                    children: [\n                      {\n                        text: 'Next',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'Angular',\n                  },\n                ],\n              },\n              {\n                text: 'Backend',\n              },\n            ],\n          },\n          { text: 'Photos' },\n          { text: 'Videos' },\n        ],\n      }\n    },\n  }\n<\/script>"})},[["render",function(e,t,n,r,a,x){const i=o("Demo"),s=o("CodeContainer");return d(),c(s,{code:a.code,demo:"",codeLanguage:"vue"},{default:l((()=>[u(i)])),_:1},8,["code"])}]])),e("c",r({components:{CodeContainer:n,Demo:r({components:{Draggable:g},data:()=>({treeData:[{text:"Projects",children:[{text:"Frontend",children:[{text:"Vue",children:[{text:"Nuxt"}]},{text:"React",children:[{text:"Next"}]},{text:"Angular"}]},{text:"Backend"}]},{text:"Photos"},{text:"Videos"},...new Array(1e3).fill(1).map((e=>({text:"Node-"+Math.random().toString().substring(2,5)})))]})},[["render",function(e,t,n,r,a,l){const u=o("Draggable");return d(),c(u,{modelValue:a.treeData,"onUpdate:modelValue":t[0]||(t[0]=e=>a.treeData=e),virtualization:"",style:{height:"500px"}},null,8,["modelValue"])}]])},data:()=>({code:"<template>\n  <Draggable v-model=\"treeData\" virtualization style=\"height: 500px\" />\n</template>\n\n<script>\n  import { BaseTree, Draggable, pro } from '@he-tree/vue'\n  import '@he-tree/vue/style/default.css'\n\n  export default {\n    components: { Draggable },\n    data() {\n      return {\n        treeData: [\n          {\n            text: 'Projects',\n            children: [\n              {\n                text: 'Frontend',\n                children: [\n                  {\n                    text: 'Vue',\n                    children: [\n                      {\n                        text: 'Nuxt',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'React',\n                    children: [\n                      {\n                        text: 'Next',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'Angular',\n                  },\n                ],\n              },\n              {\n                text: 'Backend',\n              },\n            ],\n          },\n          { text: 'Photos' },\n          { text: 'Videos' },\n          ...new Array(1000).fill(1).map((v) => ({\n            text: 'Node-' + Math.random().toString().substring(2, 5),\n          })),\n        ],\n      }\n    },\n  }\n<\/script>"})},[["render",function(e,t,n,r,a,x){const i=o("Demo"),s=o("CodeContainer");return d(),c(s,{code:a.code,demo:"",codeLanguage:"vue"},{default:l((()=>[u(i)])),_:1},8,["code"])}]])),e("d",r({components:{CodeContainer:n,Demo:r({components:{BaseTree:a},data:()=>({treeData:[{text:"Projects",children:[{text:"Frontend",children:[{text:"Vue",children:[{text:"Nuxt"}]},{text:"React",children:[{text:"Next"}]},{text:"Angular"}]}]}]})},[["render",function(e,t,n,r,a,l){const u=o("BaseTree");return d(),c(u,{modelValue:a.treeData,"onUpdate:modelValue":t[0]||(t[0]=e=>a.treeData=e),btt:""},null,8,["modelValue"])}]])},data:()=>({code:"<template>\n  <BaseTree v-model=\"treeData\" btt />\n</template>\n\n<script>\n  import { BaseTree, Draggable, pro } from '@he-tree/vue'\n  import '@he-tree/vue/style/default.css'\n\n  export default {\n    components: { BaseTree },\n    data() {\n      return {\n        treeData: [\n          {\n            text: 'Projects',\n            children: [\n              {\n                text: 'Frontend',\n                children: [\n                  {\n                    text: 'Vue',\n                    children: [\n                      {\n                        text: 'Nuxt',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'React',\n                    children: [\n                      {\n                        text: 'Next',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'Angular',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      }\n    },\n  }\n<\/script>"})},[["render",function(e,t,n,r,a,x){const i=o("Demo"),s=o("CodeContainer");return d(),c(s,{code:a.code,demo:"",codeLanguage:"vue"},{default:l((()=>[u(i)])),_:1},8,["code"])}]]));const k={components:{BaseTree:a},data:()=>({treeData:[{text:"Projects",children:[{text:"Frontend",children:[{text:"Vue",children:[{text:"Nuxt"}]},{text:"React",children:[{text:"Next"}]},{text:"Angular"}]},{text:"Backend"}]},{text:"Photos"},{text:"Videos"}]})},V={key:0},C=h("th",null,"Text",-1),B=h("th",null,"Level",-1),b={key:0},N=h("th",null,"Text",-1),T=h("th",null,"Level",-1),y={key:0},P=["onUpdate:modelValue"],j=["onClick"];e("e",r({components:{CodeContainer:n,Demo:r(k,[["render",function(e,t,n,r,a,u){const i=o("BaseTree");return d(),c(i,{modelValue:a.treeData,"onUpdate:modelValue":t[0]||(t[0]=e=>a.treeData=e),table:""},{prepend:l((({tree:e})=>[h("thead",null,[h("tr",null,[e.dragOvering?D("",!0):(d(),x("th",V,"action")),C,B])])])),append:l((({tree:e})=>[h("tfoot",null,[h("tr",null,[e.dragOvering?D("",!0):(d(),x("th",b,"action")),N,T])])])),default:l((({node:e,stat:t,indentStyle:n,tree:r})=>[r.dragOvering?D("",!0):(d(),x("td",y,[p(h("input",{type:"checkbox","onUpdate:modelValue":e=>t.checked=e},null,8,P),[[m,t.checked]]),h("button",{onClick:e=>t.open=!t.open},s(t.open?"-":"+"),9,j)])),h("td",{style:f(n)},s(e.text),5),h("td",null,s(t.level),1)])),_:1},8,["modelValue"])}]])},data:()=>({code:"<template>\n  <BaseTree v-model=\"treeData\" table>\n    <template #prepend=\"{ tree }\">\n      <thead>\n        <tr>\n          <th v-if=\"!tree.dragOvering\">action</th>\n          <th>Text</th>\n          <th>Level</th>\n        </tr>\n      </thead>\n    </template>\n    <template #append=\"{ tree }\">\n      <tfoot>\n        <tr>\n          <th v-if=\"!tree.dragOvering\">action</th>\n          <th>Text</th>\n          <th>Level</th>\n        </tr>\n      </tfoot>\n    </template>\n    <template #default=\"{ node, stat, indentStyle, tree }\">\n      <td v-if=\"!tree.dragOvering\">\n        <input type=\"checkbox\" v-model=\"stat.checked\" />\n        <button @click=\"stat.open = !stat.open\">\n          {{ stat.open ? '-' : '+' }}\n        </button>\n      </td>\n      <td :style=\"indentStyle\">\n        {{ node.text }}\n      </td>\n      <td>\n        {{ stat.level }}\n      </td>\n    </template>\n  </BaseTree>\n</template>\n\n<script>\n  import { BaseTree, Draggable, pro } from '@he-tree/vue'\n  import '@he-tree/vue/style/default.css'\n\n  export default {\n    components: { BaseTree },\n    data() {\n      return {\n        treeData: [\n          {\n            text: 'Projects',\n            children: [\n              {\n                text: 'Frontend',\n                children: [\n                  {\n                    text: 'Vue',\n                    children: [\n                      {\n                        text: 'Nuxt',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'React',\n                    children: [\n                      {\n                        text: 'Next',\n                      },\n                    ],\n                  },\n                  {\n                    text: 'Angular',\n                  },\n                ],\n              },\n              {\n                text: 'Backend',\n              },\n            ],\n          },\n          { text: 'Photos' },\n          { text: 'Videos' },\n        ],\n      }\n    },\n  }\n<\/script>"})},[["render",function(e,t,n,r,a,x){const i=o("Demo"),s=o("CodeContainer");return d(),c(s,{code:a.code,demo:"",codeLanguage:"vue"},{default:l((()=>[u(i)])),_:1},8,["code"])}]]))}}}));
