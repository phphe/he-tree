System.register(["./index-legacy-be5d2fb8.js","./CodeContainer-legacy-9e5acd0c.js"],(function(e,d){"use strict";var l,n,a,o,t,r,i,c,g,u,s,v,f,h;return{setters:[e=>{l=e._,n=e.g,a=e.u,o=e.f,t=e.h,r=e.r,i=e.c,c=e.a,g=e.b,u=e.w,s=e.e,v=e.o},e=>{f=e._,h=e.C}],execute:function(){const d={extends:f,components:{CodeContainer:h},setup(){const e=n(),d={name:"API",id:"api",level:1,children:[{name:"BaseTree",id:"basetree",level:2,children:[{name:"props",id:"props",level:3,children:[{name:"idKey",id:"idkey",level:4,children:[]},{name:"parentIdKey",id:"parentidkey",level:4,children:[]},{name:"childrenKey",id:"childrenkey",level:4,children:[]},{name:"textKey",id:"textkey",level:4,children:[]},{name:"flatData",id:"flatdata",level:4,children:[]},{name:"treeData",id:"treedata",level:4,children:[]},{name:"indent",id:"indent",level:4,children:[]},{name:"gap",id:"gap",level:4,children:[]},{name:"rtl",id:"rtl",level:4,children:[]},{name:"virtualization",id:"virtualization",level:4,children:[]},{name:"virtualizationPrerender",id:"virtualizationprerender",level:4,children:[]},{name:"childrenLazyLoading",id:"childrenlazyloading",level:4,children:[]},{name:"childrenLoader",id:"childrenloader",level:4,children:[]},{name:"defaultFolded",id:"defaultfolded",level:4,children:[]}]},{name:"data",id:"data",level:3,children:[{name:"nodes",id:"nodes",level:4,children:[]},{name:"nodesByID",id:"nodesbyid",level:4,children:[]},{name:"trees",id:"trees",level:4,children:[]},{name:"dragging",id:"dragging",level:4,children:[]},{name:"treeID",id:"treeid",level:4,children:[]},{name:"tree",id:"tree",level:4,children:[]}]},{name:"computed",id:"computed",level:3,children:[{name:"visibleNodes",id:"visiblenodes",level:4,children:[]}]},{name:"events",id:"events",level:3,children:[{name:"fold",id:"fold",level:4,children:[]},{name:"unfold",id:"unfold",level:4,children:[]},{name:"load-children",id:"load-children",level:4,children:[]},{name:"load-children-success",id:"load-children-success",level:4,children:[]},{name:"load-children-error",id:"load-children-error",level:4,children:[]}]},{name:"methods",id:"methods",level:3,children:[{name:"countChildren",id:"countchildren",level:4,children:[]},{name:"addNode",id:"addnode",level:4,children:[]},{name:"moveNode",id:"movenode",level:4,children:[]},{name:"removeNode",id:"removenode",level:4,children:[]},{name:"outputNestedData",id:"outputnesteddata",level:4,children:[]},{name:"outputFlatData",id:"outputflatdata",level:4,children:[]},{name:"isNodeParentFolded",id:"isnodeparentfolded",level:4,children:[]},{name:"isNodeVisible",id:"isnodevisible",level:4,children:[]},{name:"foldAll",id:"foldall",level:4,children:[]},{name:"unfoldAll",id:"unfoldall",level:4,children:[]},{name:"unfold",id:"unfold-1",level:4,children:[]},{name:"toggleFold",id:"togglefold",level:4,children:[]},{name:"updateChecked",id:"updatechecked",level:4,children:[]},{name:"getAllCheckedNodes",id:"getallcheckednodes",level:4,children:[]}]}]},{name:"Draggable",id:"draggable",level:2,children:[{name:"props",id:"props-1",level:3,children:[{name:"triggerClass",id:"triggerclass",level:4,children:[]},{name:"triggerBySelf",id:"triggerbyself",level:4,children:[]},{name:"draggable",id:"draggable-1",level:4,children:[]},{name:"droppable",id:"droppable",level:4,children:[]},{name:"eachDraggable",id:"eachdraggable",level:4,children:[]},{name:"eachDroppable",id:"eachdroppable",level:4,children:[]},{name:"rootDraggable",id:"rootdraggable",level:4,children:[]},{name:"rootDroppable",id:"rootdroppable",level:4,children:[]},{name:"ondragstart",id:"ondragstart",level:4,children:[]},{name:"ondragend",id:"ondragend",level:4,children:[]},{name:"afterPlaceholderCreated",id:"afterplaceholdercreated",level:4,children:[]},{name:"placeholderMaxHeight",id:"placeholdermaxheight",level:4,children:[]},{name:"unfoldWhenDragover",id:"unfoldwhendragover",level:4,children:[]},{name:"unfoldWhenDragoverDelay",id:"unfoldwhendragoverdelay",level:4,children:[]},{name:"isNodeUnfoldable",id:"isnodeunfoldable",level:4,children:[]},{name:"draggingNodePositionMode",id:"draggingnodepositionmode",level:4,children:[]},{name:"preventTextSelection",id:"preventtextselection",level:4,children:[]},{name:"edgeScroll",id:"edgescroll",level:4,children:[]},{name:"edgeScrollTriggerMargin",id:"edgescrolltriggermargin",level:4,children:[]},{name:"edgeScrollSpeed",id:"edgescrollspeed",level:4,children:[]},{name:"edgeScrollTriggerMode",id:"edgescrolltriggermode",level:4,children:[]},{name:"edgeScrollSpecifiedContainerX",id:"edgescrollspecifiedcontainerx",level:4,children:[]},{name:"edgeScrollSpecifiedContainerY",id:"edgescrollspecifiedcontainery",level:4,children:[]}]},{name:"data",id:"data-1",level:3,children:[{name:"draggingNode",id:"draggingnode",level:4,children:[]},{name:"store",id:"store",level:4,children:[]}]},{name:"events",id:"events-1",level:3,children:[{name:"drag",id:"drag",level:4,children:[]},{name:"before-first-move",id:"before-first-move",level:4,children:[]},{name:"drop",id:"drop",level:4,children:[]},{name:"drop-into",id:"drop-into",level:4,children:[]},{name:"drop-change",id:"drop-change",level:4,children:[]}]},{name:"methods",id:"methods-1",level:3,children:[{name:"isParentDragging",id:"isparentdragging",level:4,children:[]}]}]},{name:"Other",id:"other",level:2,children:[{name:"Draggable",id:"draggable-2",level:3,children:[]},{name:"eachDraggableFunc",id:"eachdraggablefunc",level:3,children:[]},{name:"PositionMode",id:"positionmode",level:3,children:[]},{name:"Store3",id:"store3",level:3,children:[]},{name:"EventPosition",id:"eventposition",level:3,children:[]},{name:"EventPosition2",id:"eventposition2",level:3,children:[]},{name:"obj",id:"obj",level:3,children:[]},{name:"BaseNode",id:"basenode",level:3,children:[]},{name:"Node",id:"node",level:3,children:[]}]}]}||{};a(d.name,e),o.value=d.children||[],t((()=>{o.value=null}))}},p={class:"docs-view"},m={class:"article mt-14 mb-8 prose"},b=c("p",null,"vm of tree",-1),_=c("p",null,"折叠节点时触发.",-1),L=c("p",null,"打开节点时触发.",-1),y=c("p",null,"针对子节点延迟加载. 加载子节点时触发.",-1),N=c("p",null,"针对子节点延迟加载. 加载子节点成功时触发.",-1),S=c("p",null,[s("针对子节点延迟加载. 加载子节点失败时触发. 通过"),c("code",null,"node.$childrenLoadStaus.error"),s("获取错误信息.")],-1),D=c("p",null,"拖拽树组件. 继承于 BaseTree.",-1),P=c("p",null,[s("方法类型是 "),c("a",{href:"#eachDraggableFunc"},"eachDraggableFunc")],-1),E=c("p",null,[s("方法类型是 "),c("a",{href:"#eachDraggableFunc"},"eachDraggableFunc")],-1),T=c("p",null,[c("strong",null,[c("code",null,"ondragend"),s(" 支持 promise, 但 "),c("code",null,"ondragstart"),s(" 不支持.")])],-1),M=c("p",null,[c("strong",null,[c("code",null,"ondragend"),s(" 支持 promise, 但 "),c("code",null,"ondragstart"),s(" 不支持.")])],-1),C=c("p",null,[c("strong",null,[s("执行"),c("code",null,"ondragend"),s("时, 数据尚未更新.")])],-1),B=c("p",null,"拖拽过程中的相关数据.",-1),k=c("p",null,"拖拽开始时触发.",-1),x=c("p",null,[s("与"),c("code",null,"drag"),s("相同并同时触发.")],-1),F=c("p",null,"拖拽结束时触发. 触发到拖拽开始树.",-1),$=c("p",null,"拖拽结束时触发. 触发到拖拽目标树(如果拖拽开始的树和结束的不是同一颗树, 即跨树).",-1),H=c("p",null,"拖拽结束时触发. 同时触发到拖拽开始和目标树.",-1),w=c("p",null,"Draggable 组件的 Vue 实例(vm).",-1),I=c("p",null,"拖拽过程中的相关数据.",-1);e("default",l(d,[["render",function(e,d,l,n,a,o){const t=r("vheading"),f=r("CodeContainer");return v(),i("div",p,[c("div",m,[g(t,{level:1,id:"api"},{default:u((()=>[s("API")])),_:1}),g(t,{level:2,id:"basetree"},{default:u((()=>[s("BaseTree")])),_:1}),g(t,{level:3,id:"props"},{default:u((()=>[s("props")])),_:1}),g(t,{level:4,id:"idkey"},{default:u((()=>[s("idKey")])),_:1}),g(f,{codeLanguage:"ts",code:'{ type: String, default: "id" }\n'}),g(t,{level:4,id:"parentidkey"},{default:u((()=>[s("parentIdKey")])),_:1}),g(f,{codeLanguage:"ts",code:'{ type: String, default: "parent_id" }\n'}),g(t,{level:4,id:"childrenkey"},{default:u((()=>[s("childrenKey")])),_:1}),g(f,{codeLanguage:"ts",code:'{ type: String, default: "children" }\n'}),g(t,{level:4,id:"textkey"},{default:u((()=>[s("textKey")])),_:1}),g(f,{codeLanguage:"ts",code:'{ type: String, default: "text" }\n'}),g(t,{level:4,id:"flatdata"},{default:u((()=>[s("flatData")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  type: Array\n}\n"}),g(t,{level:4,id:"treedata"},{default:u((()=>[s("treeData")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  type: Array\n}\n"}),g(t,{level:4,id:"indent"},{default:u((()=>[s("indent")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Number, default: 20 }\n"}),g(t,{level:4,id:"gap"},{default:u((()=>[s("gap")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  type: Number\n}\n"}),g(t,{level:4,id:"rtl"},{default:u((()=>[s("rtl")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: false }\n"}),g(t,{level:4,id:"virtualization"},{default:u((()=>[s("virtualization")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: false }\n"}),g(t,{level:4,id:"virtualizationprerender"},{default:u((()=>[s("virtualizationPrerender")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Number, default: 20 }\n"}),g(t,{level:4,id:"childrenlazyloading"},{default:u((()=>[s("childrenLazyLoading")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: false }\n"}),g(t,{level:4,id:"childrenloader"},{default:u((()=>[s("childrenLoader")])),_:1}),g(f,{codeLanguage:"ts",code:"(\n  node: Node,\n  vm: ComponentPublicInstance\n) => Promise<Node[]>;\n"}),g(t,{level:4,id:"defaultfolded"},{default:u((()=>[s("defaultFolded")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: false }\n"}),g(t,{level:3,id:"data"},{default:u((()=>[s("data")])),_:1}),g(t,{level:4,id:"nodes"},{default:u((()=>[s("nodes")])),_:1}),g(f,{codeLanguage:"ts",code:"Node[]\n"}),g(t,{level:4,id:"nodesbyid"},{default:u((()=>[s("nodesByID")])),_:1}),g(f,{codeLanguage:"ts",code:"Record<string, Node>\n"}),g(t,{level:4,id:"trees"},{default:u((()=>[s("trees")])),_:1}),g(f,{codeLanguage:"ts",code:"{[treeID:string]: Node}\n"}),g(t,{level:4,id:"dragging"},{default:u((()=>[s("dragging")])),_:1}),g(f,{codeLanguage:"ts",code:"boolean\n"}),g(t,{level:4,id:"treeid"},{default:u((()=>[s("treeID")])),_:1}),g(f,{codeLanguage:"ts",code:"string\n"}),g(t,{level:4,id:"tree"},{default:u((()=>[s("tree")])),_:1}),b,g(f,{codeLanguage:"ts",code:"this\n"}),g(t,{level:3,id:"computed"},{default:u((()=>[s("computed")])),_:1}),g(t,{level:4,id:"visiblenodes"},{default:u((()=>[s("visibleNodes")])),_:1}),g(f,{codeLanguage:"ts",code:"Node[]\n"}),g(t,{level:3,id:"events"},{default:u((()=>[s("events")])),_:1}),g(t,{level:4,id:"fold"},{default:u((()=>[s("fold")])),_:1}),_,g(f,{codeLanguage:"ts",code:"(node: Node)\n"}),g(t,{level:4,id:"unfold"},{default:u((()=>[s("unfold")])),_:1}),L,g(f,{codeLanguage:"ts",code:"(node: Node)\n"}),g(t,{level:4,id:"load-children"},{default:u((()=>[s("load-children")])),_:1}),y,g(f,{codeLanguage:"ts",code:"(node: Node)\n"}),g(t,{level:4,id:"load-children-success"},{default:u((()=>[s("load-children-success")])),_:1}),N,g(f,{codeLanguage:"ts",code:"(node: Node)\n"}),g(t,{level:4,id:"load-children-error"},{default:u((()=>[s("load-children-error")])),_:1}),S,g(f,{codeLanguage:"ts",code:"(node: Node)\n"}),g(t,{level:3,id:"methods"},{default:u((()=>[s("methods")])),_:1}),g(t,{level:4,id:"countchildren"},{default:u((()=>[s("countChildren")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node | undefined): number\n"}),g(t,{level:4,id:"addnode"},{default:u((()=>[s("addNode")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: obj, parentId: number | string | null, index?: number): void;\n"}),g(t,{level:4,id:"movenode"},{default:u((()=>[s("moveNode")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node, parentId: number | string | null, index?: number): void;\n"}),g(t,{level:4,id:"removenode"},{default:u((()=>[s("removeNode")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node): void;\n"}),g(t,{level:4,id:"outputnesteddata"},{default:u((()=>[s("outputNestedData")])),_:1}),g(f,{codeLanguage:"ts",code:"(parent: Node | null, ignoreKeys?: string[], _returnFlat?: boolean | undefined): obj[];\n"}),g(t,{level:4,id:"outputflatdata"},{default:u((()=>[s("outputFlatData")])),_:1}),g(f,{codeLanguage:"ts",code:"(parent: Node | null, ignoreKeys?: string[]): Record<string, unknown>[];\n"}),g(t,{level:4,id:"isnodeparentfolded"},{default:u((()=>[s("isNodeParentFolded")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node): boolean;\n"}),g(t,{level:4,id:"isnodevisible"},{default:u((()=>[s("isNodeVisible")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node): boolean;\n"}),g(t,{level:4,id:"foldall"},{default:u((()=>[s("foldAll")])),_:1}),g(f,{codeLanguage:"ts",code:"(): void;\n"}),g(t,{level:4,id:"unfoldall"},{default:u((()=>[s("unfoldAll")])),_:1}),g(f,{codeLanguage:"ts",code:"(node?: Node | undefined): Promise<void> | undefined;\n"}),g(t,{level:4,id:"unfold-1"},{default:u((()=>[s("unfold")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node): void | Promise<void>;\n"}),g(t,{level:4,id:"togglefold"},{default:u((()=>[s("toggleFold")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node): void | Promise<void>;\n"}),g(t,{level:4,id:"updatechecked"},{default:u((()=>[s("updateChecked")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node): void;\n"}),g(t,{level:4,id:"getallcheckednodes"},{default:u((()=>[s("getAllCheckedNodes")])),_:1}),g(f,{codeLanguage:"ts",code:"(): Node[];\n"}),g(t,{level:2,id:"draggable"},{default:u((()=>[s("Draggable")])),_:1}),D,g(t,{level:3,id:"props-1"},{default:u((()=>[s("props")])),_:1}),g(t,{level:4,id:"triggerclass"},{default:u((()=>[s("triggerClass")])),_:1}),g(f,{codeLanguage:"ts",code:'{ type: String, default: "tree-node" }\n'}),g(t,{level:4,id:"triggerbyself"},{default:u((()=>[s("triggerBySelf")])),_:1}),g(f,{codeLanguage:"ts",code:"Boolean\n"}),g(t,{level:4,id:"draggable-1"},{default:u((()=>[s("draggable")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),g(t,{level:4,id:"droppable"},{default:u((()=>[s("droppable")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),g(t,{level:4,id:"eachdraggable"},{default:u((()=>[s("eachDraggable")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  type: [Boolean, Function]\n}\n"}),P,g(t,{level:4,id:"eachdroppable"},{default:u((()=>[s("eachDroppable")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  type: [Boolean, Function]\n}\n"}),E,g(t,{level:4,id:"rootdraggable"},{default:u((()=>[s("rootDraggable")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),g(t,{level:4,id:"rootdroppable"},{default:u((()=>[s("rootDroppable")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),g(t,{level:4,id:"ondragstart"},{default:u((()=>[s("ondragstart")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n"}),T,g(t,{level:4,id:"ondragend"},{default:u((()=>[s("ondragend")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n"}),M,C,g(t,{level:4,id:"afterplaceholdercreated"},{default:u((()=>[s("afterPlaceholderCreated")])),_:1}),g(f,{codeLanguage:"ts",code:"(placeholder: HTMLElement, store: Store3) => void\n"}),g(t,{level:4,id:"placeholdermaxheight"},{default:u((()=>[s("placeholderMaxHeight")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Number, default: 100 }\n"}),g(t,{level:4,id:"unfoldwhendragover"},{default:u((()=>[s("unfoldWhenDragover")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),g(t,{level:4,id:"unfoldwhendragoverdelay"},{default:u((()=>[s("unfoldWhenDragoverDelay")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Number, default: 80 }\n"}),g(t,{level:4,id:"isnodeunfoldable"},{default:u((()=>[s("isNodeUnfoldable")])),_:1}),g(f,{codeLanguage:"ts",code:"{\ntype: Function as PropType<(store: Store3) => boolean>,\n}\n"}),g(t,{level:4,id:"draggingnodepositionmode"},{default:u((()=>[s("draggingNodePositionMode")])),_:1}),g(f,{codeLanguage:"ts",code:'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n'}),g(t,{level:4,id:"preventtextselection"},{default:u((()=>[s("preventTextSelection")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Boolean, default: true }\n"}),g(t,{level:4,id:"edgescroll"},{default:u((()=>[s("edgeScroll")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  type: Boolean\n}\n"}),g(t,{level:4,id:"edgescrolltriggermargin"},{default:u((()=>[s("edgeScrollTriggerMargin")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Number, default: 50 }\n"}),g(t,{level:4,id:"edgescrollspeed"},{default:u((()=>[s("edgeScrollSpeed")])),_:1}),g(f,{codeLanguage:"ts",code:"{ type: Number, default: 0.35 }\n"}),g(t,{level:4,id:"edgescrolltriggermode"},{default:u((()=>[s("edgeScrollTriggerMode")])),_:1}),g(f,{codeLanguage:"ts",code:'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n'}),g(t,{level:4,id:"edgescrollspecifiedcontainerx"},{default:u((()=>[s("edgeScrollSpecifiedContainerX")])),_:1}),g(f,{codeLanguage:"ts",code:"HTMLElement | ((store: Store3) => HTMLElement)\n"}),g(t,{level:4,id:"edgescrollspecifiedcontainery"},{default:u((()=>[s("edgeScrollSpecifiedContainerY")])),_:1}),g(f,{codeLanguage:"ts",code:"HTMLElement | ((store: Store3) => HTMLElement)\n"}),g(t,{level:3,id:"data-1"},{default:u((()=>[s("data")])),_:1}),g(t,{level:4,id:"draggingnode"},{default:u((()=>[s("draggingNode")])),_:1}),g(f,{codeLanguage:"ts",code:"Node | null\n"}),g(t,{level:4,id:"store"},{default:u((()=>[s("store")])),_:1}),B,g(f,{codeLanguage:"ts",code:"Store3 | null\n"}),g(t,{level:3,id:"events-1"},{default:u((()=>[s("events")])),_:1}),g(t,{level:4,id:"drag"},{default:u((()=>[s("drag")])),_:1}),k,g(f,{codeLanguage:"ts",code:"(store: Store3)\n"}),g(t,{level:4,id:"before-first-move"},{default:u((()=>[s("before-first-move")])),_:1}),x,g(f,{codeLanguage:"ts",code:"(store: Store3)\n"}),g(t,{level:4,id:"drop"},{default:u((()=>[s("drop")])),_:1}),F,g(f,{codeLanguage:"ts",code:"(store: Store3)\n"}),g(t,{level:4,id:"drop-into"},{default:u((()=>[s("drop-into")])),_:1}),$,g(f,{codeLanguage:"ts",code:"(store: Store3)\n"}),g(t,{level:4,id:"drop-change"},{default:u((()=>[s("drop-change")])),_:1}),H,g(f,{codeLanguage:"ts",code:"(store: Store3)\n"}),g(t,{level:3,id:"methods-1"},{default:u((()=>[s("methods")])),_:1}),g(t,{level:4,id:"isparentdragging"},{default:u((()=>[s("isParentDragging")])),_:1}),g(f,{codeLanguage:"ts",code:"(node: Node): boolean;\n"}),g(t,{level:2,id:"other"},{default:u((()=>[s("Other")])),_:1}),g(t,{level:3,id:"draggable-2"},{default:u((()=>[s("Draggable")])),_:1}),w,g(t,{level:3,id:"eachdraggablefunc"},{default:u((()=>[s("eachDraggableFunc")])),_:1}),g(f,{codeLanguage:"ts",code:"type eachDraggableFunc = (\n  node: Node | undefined,\n  store: Store3,\n  options: Options2,\n  vm: Draggable\n) => boolean | undefined\n"}),g(t,{level:3,id:"positionmode"},{default:u((()=>[s("PositionMode")])),_:1}),g(f,{codeLanguage:"ts",code:"'top_left_corner' | 'mouse'\n"}),g(t,{level:3,id:"store3"},{default:u((()=>[s("Store3")])),_:1}),I,g(f,{codeLanguage:"ts",code:'interface {\n  // Store\n  movedCount: number;\n  listenerElement: HTMLElement;\n  directTriggerElement: HTMLElement;\n  triggerElement: HTMLElement;\n  startEvent: MouseOrTouchEvent;\n  moveEvent: MouseOrTouchEvent;\n  endEvent: MouseOrTouchEvent;\n  mouse: EventPosition;\n  initialMouse: EventPosition;\n  move: EventPosition2;\n  movedOrClonedElement: HTMLElement;\n  movedElement: HTMLElement;\n  initialPosition: EventPosition2;\n  initialPositionRelativeToViewport: EventPosition2;\n  updateMovedElementStyle: () => void;\n  _isMovingElementCloned: boolean;\n  // Store2\n  startTreeEl: HTMLElement;\n  targetTreeEl: HTMLElement;\n  placeholder: HTMLElement;\n  // Store3\n  startTree: Draggable;\n  targetTree: Draggable;\n  draggingNode: Node;\n  startPath: {\n      tree: Draggable;\n      parent?: Node;\n      index: number;\n  };\n  targetPath: Store3["startPath"]; // same to startPath\n  placeholderLevel: number;\n  placeholderPrevNode?: Node;\n  placeholderPrevNodeInTree?: Node;\n  dragChanged?: boolean;\n  isCloned?: boolean;\n}\n'}),g(t,{level:3,id:"eventposition"},{default:u((()=>[s("EventPosition")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  x: number, y: number,\n  pageX: number,\n  pageY: number,\n  clientX: number,\n  clientY: number,\n  screenX: number,\n  screenY: number\n}\n"}),g(t,{level:3,id:"eventposition2"},{default:u((()=>[s("EventPosition2")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  x: number\n  y: number\n}\n"}),g(t,{level:3,id:"obj"},{default:u((()=>[s("obj")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n  string: unknown\n}\n"}),g(t,{level:3,id:"basenode"},{default:u((()=>[s("BaseNode")])),_:1}),g(f,{codeLanguage:"ts",code:"{\n    $id: string | number;\n    $pid?: string | number;\n    $level: number;\n    $hidden?: boolean;\n    $folded?: boolean;\n    $checked?: boolean | 0;\n    $children: Node[];\n    $childrenLoading?: boolean;\n    $childrenLoadStaus?: {\n      status: 'success'|'error',\n      error: Error\n    };\n    $draggable?: boolean;\n    $droppable?: boolean;\n    $nodeStyle?: string | Record<string, string> | unknown;\n    $nodeClass?: string | unknown;\n    $outerStyle?: string | Record<string, string> | unknown;\n    $outerClass?: string | unknown;\n}\n"}),g(t,{level:3,id:"node"},{default:u((()=>[s("Node")])),_:1}),g(f,{codeLanguage:"ts",code:"obj & BaseNode\n"})])])}]]))}}}));
